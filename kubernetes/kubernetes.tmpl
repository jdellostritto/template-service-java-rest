apiVersion: v1
kind: Service
metadata:
  name: ${PROJECT}
  labels:
    app: ${PROJECT}
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8700
  selector:
    name: ${PROJECT}
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
    - hostname: localhost
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ${PROJECT}
spec:
  replicas: ${REPCOUNT}
  selector:
    matchLabels:
      name: ${PROJECT}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: ${PROJECT}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "name"
                    operator: In
                    values:
                    - ${PROJECT}
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: ${PROJECT}
        image: ${REPO}/${PROJECT}:${BUILD}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 40m
            memory: 50Mi
        ports:
        - containerPort: 8700
          name: rest
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: ${ENVIRONMENT}